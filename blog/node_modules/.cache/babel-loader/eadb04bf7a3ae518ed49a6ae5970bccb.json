{"ast":null,"code":"import _slicedToArray from \"/home/akbar/dev/bloglistapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/akbar/dev/bloglistapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/akbar/dev/bloglistapp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/akbar/dev/bloglistapp/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport AddForm from './components/AddForm';\nimport Togglable from './components/Togglable';\nimport { useField } from './hooks';\n\nconst loginForm = (handleLogin, username, password) => {\n  const userReset = username.reset,\n        _username = _objectWithoutProperties(username, [\"reset\"]);\n\n  const passReset = password.reset,\n        _password = _objectWithoutProperties(password, [\"reset\"]);\n\n  return React.createElement(\"form\", {\n    className: \"login\",\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"username\", React.createElement(\"input\", Object.assign({}, _username, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"password\", React.createElement(\"input\", Object.assign({}, _password, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"login\"));\n};\n\nconst Notification = ({\n  message,\n  error\n}) => {\n  if (message === null) {\n    return null;\n  }\n\n  const notice = {\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n  let styleObj = {};\n\n  if (error) {\n    styleObj = _objectSpread({}, notice, {\n      color: 'red'\n    });\n  } else {\n    styleObj = _objectSpread({}, notice, {\n      color: 'green'\n    });\n  }\n\n  return React.createElement(\"div\", {\n    style: styleObj,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, message);\n};\n\nconst blogForm = (blogs, handleLike, user = {}, handleLogout, handleDelete) => {\n  const _user$name = user.name,\n        name = _user$name === void 0 ? '' : _user$name;\n  return React.createElement(\"div\", {\n    className: \"blogs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\".concat(name, \" logged in\"), \" \", React.createElement(\"button\", {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"logout\"), \" \"), blogs.map(x => React.createElement(Blog, {\n    key: x.id,\n    blog: x,\n    handleLike: handleLike,\n    handleDelete: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nconst getTogglable = (handleSubmit, newTitle, newAuthor, newUrl) => React.createElement(Togglable, {\n  buttonLabel: \"new blog\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(AddForm, {\n  handleSubmit: handleSubmit,\n  newTitle: newTitle,\n  newAuthor: newAuthor,\n  newUrl: newUrl,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}));\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        blogs = _useState2[0],\n        setBlogs = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const username = useField('text');\n  const password = useField('password');\n  const newTitle = useField('text');\n  const newAuthor = useField('text');\n  const newUrl = useField('text');\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        notification = _useState8[0],\n        setNotification = _useState8[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const blgObj = await blogService.createNew({\n        title: newTitle.value,\n        author: newAuthor.value,\n        url: newUrl.value\n      });\n      setNotification(\"A new blog \".concat(newTitle.value, \" by \").concat(newAuthor.value, \" is added \"));\n      newTitle.reset();\n      newAuthor.reset();\n      newUrl.reset();\n      setBlogs([...blogs, blgObj].sort((a, b) => {\n        if (a.likes < b.likes) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }));\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    } catch (e) {\n      setError(\"\".concat(e.response.data.error));\n      setTimeout(() => {\n        setError(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const userVal = username.value;\n      const pasVal = password.value;\n      console.log(userVal, pasVal);\n      const user = await loginService.login({\n        username: userVal,\n        password: pasVal\n      });\n      setUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      username.reset();\n      password.reset();\n    } catch (exception) {\n      setError('user name or password is invalid');\n      setTimeout(() => {\n        setError(null);\n      }, 5000);\n    }\n  };\n\n  const handleLike = id => {\n    return async () => {\n      const index = blogs.findIndex(x => x.id === id);\n      blogs[index].likes += 1;\n\n      try {\n        await blogService.updateLike(id, blogs[index].likes);\n        setBlogs([...blogs].sort((a, b) => {\n          if (a.likes < b.likes) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n  };\n\n  const handleDelete = (id, title) => {\n    return async () => {\n      if (window.confirm(\"Do you really want to delete \".concat(title, \" ?\"))) {\n        try {\n          await blogService.deletePost(id);\n          const index = blogs.findIndex(x => x.id === id);\n          blogs.splice(index, 1);\n          setBlogs([...blogs].sort((a, b) => {\n            if (a.likes < b.likes) {\n              return 1;\n            } else {\n              return -1;\n            }\n          }));\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    let user = localStorage.getItem('user');\n\n    if (user) {\n      user = JSON.parse(user);\n    } else {\n      user = null;\n    }\n\n    setUser(user);\n    blogService.getAll().then(blogs => {\n      blogs = blogs.sort((a, b) => {\n        if (a.likes < b.likes) {\n          return 1;\n        } else {\n          return -1;\n        }\n      });\n      setBlogs(blogs);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: notification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    message: error,\n    error: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), user !== null && blogForm(blogs, handleLike, user, handleLogout, handleDelete), user !== null && getTogglable(handleSubmit, newTitle, newAuthor, newUrl), user === null && loginForm(handleLogin, username, password));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/akbar/dev/bloglistapp/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","AddForm","Togglable","useField","loginForm","handleLogin","username","password","userReset","reset","_username","passReset","_password","Notification","message","error","notice","background","fontSize","borderStyle","borderRadius","padding","marginBottom","styleObj","color","blogForm","blogs","handleLike","user","handleLogout","handleDelete","name","map","x","id","getTogglable","handleSubmit","newTitle","newAuthor","newUrl","App","setBlogs","setUser","setError","notification","setNotification","event","preventDefault","blgObj","createNew","title","value","author","url","sort","a","b","likes","setTimeout","e","response","data","userVal","pasVal","console","log","login","localStorage","setItem","JSON","stringify","exception","index","findIndex","updateLike","window","confirm","deletePost","splice","removeItem","getItem","parse","getAll","then"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport AddForm from './components/AddForm';\nimport Togglable from './components/Togglable';\nimport  { useField } from './hooks';\n\nconst loginForm = (handleLogin, username, password) => {\n    const { reset:userReset, ..._username } = username;\n    const { reset:passReset, ..._password } = password;\n    return (\n        <form className=\"login\" onSubmit={handleLogin}>\n            <div>\n                username\n                <input {..._username}  />\n            </div>\n            <div>\n                password\n                <input {..._password}  />\n            </div>\n            <button type=\"submit\">login</button>\n        </form>\n    );\n};\nconst Notification = ({ message, error }) => {\n    if (message === null) {\n        return null;\n    }\n    const notice = {\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    };\n    let styleObj = {};\n    if (error) {\n        styleObj = { ...notice, color:'red' };\n    } else {\n        styleObj =  { ...notice, color: 'green' };\n    }\n    return (\n        <div style={styleObj}>\n            {message}\n        </div>\n    );\n};\n\nconst blogForm = (blogs, handleLike, user={}, handleLogout, handleDelete) => {\n    const { name = '' } = user;\n    return  (\n        <div className=\"blogs\">\n            <h2>blogs</h2>\n            <span>{`${name} logged in`} <button onClick={handleLogout}>logout</button> </span>\n            { blogs.map(x => <Blog key={x.id} blog={x} handleLike={handleLike} handleDelete={handleDelete} />) }\n        </div>\n    );\n};\nconst getTogglable = (handleSubmit, newTitle, newAuthor, newUrl) => (\n    <Togglable buttonLabel=\"new blog\">\n        <AddForm handleSubmit={handleSubmit} newTitle={newTitle} newAuthor={newAuthor} newUrl={newUrl} />\n    </Togglable>\n\n);\nfunction App() {\n    const [blogs, setBlogs] = useState([]);\n    const [user, setUser] = useState(null);\n    const username = useField('text');\n    const password = useField('password');\n    const newTitle = useField('text');\n    const newAuthor = useField('text');\n    const newUrl = useField('text');\n    const [error, setError ] = useState(null);\n    const [notification, setNotification] = useState(null);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const blgObj = await blogService.createNew({ title: newTitle.value, author: newAuthor.value, url: newUrl.value });\n            setNotification(`A new blog ${newTitle.value} by ${newAuthor.value} is added `);\n            newTitle.reset();\n            newAuthor.reset();\n            newUrl.reset();\n            setBlogs([...blogs, blgObj].sort((a, b) => { if (a.likes < b.likes) {return 1; }else{ return -1;}}  ));\n            setTimeout(() => {setNotification(null);}, 5000);\n\n        } catch (e) {\n            setError(`${e.response.data.error}`);\n            setTimeout(() => {setError(null);}, 5000);\n        }\n    };\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        try {\n            const userVal = username.value;\n            const pasVal = password.value;\n            console.log(userVal, pasVal);\n            const user = await loginService.login({ username: userVal, password: pasVal });\n            setUser(user);\n            localStorage.setItem('user', JSON.stringify(user));\n            username.reset();\n            password.reset();\n\n        } catch (exception) {\n            setError('user name or password is invalid');\n            setTimeout(() => { setError(null); }, 5000);\n        }\n    };\n    const handleLike = (id) => {\n        return async() => {\n            const index = blogs.findIndex(x => x.id===id);\n            blogs[index].likes += 1;\n\n            try {\n                await blogService.updateLike(id, blogs[index].likes);\n                setBlogs([...blogs].sort((a, b) => { if (a.likes < b.likes) {return 1; }else{ return -1;}}  ));\n            } catch (e) {\n                console.log(e);\n            }\n        };\n    };\n    const handleDelete = (id, title) => {\n        return async() => {\n            if (window.confirm(`Do you really want to delete ${title} ?`)) {\n                try {\n                    await blogService.deletePost(id);\n                    const index = blogs.findIndex(x => x.id===id);\n                    blogs.splice(index, 1);\n                    setBlogs([...blogs].sort((a, b) => { if (a.likes < b.likes) {return 1; }else{ return -1;}}  ));\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        };\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        setUser(null);\n\n    };\n    useEffect(() => {\n        let  user = localStorage.getItem('user');\n        if (user) {\n            user =JSON.parse(user);\n        } else {\n            user = null;\n        }\n        setUser(user);\n\n        blogService\n            .getAll().then(blogs => {\n                blogs = blogs.sort((a, b) => { if (a.likes < b.likes) {return 1; }else{ return -1;} });\n                setBlogs(blogs);\n            });\n    }, []);\n    return (\n        <div className=\"App\">\n            <Notification message={notification} />\n            <Notification message={error} error />\n\n            {user !== null && blogForm(blogs, handleLike, user, handleLogout, handleDelete)}\n            {user !== null && getTogglable(handleSubmit, newTitle, newAuthor, newUrl)}\n            {user === null && loginForm(handleLogin, username, password)}\n\n\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}